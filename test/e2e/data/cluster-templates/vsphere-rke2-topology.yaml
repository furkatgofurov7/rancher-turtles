apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereClusterIdentity
metadata:
  name: '${CLUSTER_NAME}-identity'
spec:
  secretName: vsphere
  allowedNamespaces:
    selector:
      matchLabels: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: '${CLUSTER_NAME}'
  namespace: '${NAMESPACE}'
spec:
  topology:
    class: vsphere-rke2-example
    classNamespace: ${TOPOLOGY_NAMESPACE}
    version: ${RKE2_VERSION}
    controlPlane:
      replicas: ${CONTROL_PLANE_MACHINE_COUNT}
    workers:
      machineDeployments:
      - class: vsphere-rke2-example-worker
        name: md-0
        replicas: ${WORKER_MACHINE_COUNT}
    variables:
    - name: vSphereIdentityName
      value: ${CLUSTER_NAME}-identity
    - name: vSphereTLSThumbprint
      value: '${VSPHERE_TLS_THUMBPRINT}'
    - name: vSphereDataCenter
      value: '${VSPHERE_DATACENTER}'
    - name: vSphereDataStore
      value: '${VSPHERE_DATASTORE}'
    - name: vSphereFolder
      value: '${VSPHERE_FOLDER}'
    - name: vSphereNetwork
      value: '${VSPHERE_NETWORK}'
    - name: vSphereResourcePool
      value: '${VSPHERE_RESOURCE_POOL}'
    - name: vSphereServer
      value: '${VSPHERE_SERVER}'
    - name: vSphereTemplate
      value: '${VSPHERE_TEMPLATE}'
    - name: controlPlaneIpAddr
      value: '${CONTROL_PLANE_ENDPOINT_IP}'
    - name: controlPlanePort
      value: 6443
    - name: kubeVipPodManifest
      value: |
        apiVersion: v1
        kind: ServiceAccount
        metadata:
          name: kube-vip
          namespace: kube-system
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRole
        metadata:
          annotations:
            rbac.authorization.kubernetes.io/autoupdate: "true"
          name: system:kube-vip-role
        rules:
          - apiGroups: [""]
            resources: ["services", "services/status", "nodes"]
            verbs: ["list","get","watch", "update"]
          - apiGroups: ["coordination.k8s.io"]
            resources: ["leases"]
            verbs: ["list", "get", "watch", "update", "create"]
        ---
        kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: system:kube-vip-binding
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: system:kube-vip-role
        subjects:
        - kind: ServiceAccount
          name: kube-vip
          namespace: kube-system
        ---
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          tolerations:
          - effect: NoSchedule
            key: node.cloudprovider.kubernetes.io/uninitialized
            operator: Exists
          containers:
          - args:
            - manager
            env:
            - name: vip_arp
              value: "true"
            - name: port
              value: "6443"
            - name: vip_nodename
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: vip_interface
              value: eth0
            - name: vip_cidr
              value: "32"
            - name: dns_mode
              value: first
            - name: cp_enable
              value: "true"
            - name: cp_namespace
              value: kube-system
            - name: svc_enable
              value: "true"
            - name: svc_leasename
              value: plndr-svcs-lock
            - name: vip_leaderelection
              value: "true"
            - name: vip_leasename
              value: plndr-cp-lock
            - name: vip_leaseduration
              value: "5"
            - name: vip_renewdeadline
              value: "3"
            - name: vip_retryperiod
              value: "1"
            - name: address
              value: ${CONTROL_PLANE_ENDPOINT_IP}
            - name: prometheus_server
              value: :2112
            image: ghcr.io/kube-vip/kube-vip:v0.8.10
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - NET_RAW
                drop:
                - ALL
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostAliases:
          - hostnames:
            - kubernetes
            ip: 127.0.0.1
          hostNetwork: true
          serviceAccountName: kube-vip
          volumes:
          - hostPath:
              path: /etc/rancher/rke2/rke2.yaml
              type: File
            name: kubeconfig
---
kind: Bundle
apiVersion: fleet.cattle.io/v1alpha1
metadata:
  name: vsphere-csi-config
  namespace: '${NAMESPACE}'
spec:
  resources:
  - content: |-
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: vsphere-config-secret
        namespace: vmware-system-csi
      stringData:
        csi-vsphere.conf: |+
          [Global]
          thumbprint = "${VSPHERE_TLS_THUMBPRINT}"

          [VirtualCenter "${VSPHERE_SERVER}"]
          user = "${VSPHERE_USERNAME}"
          password = "${VSPHERE_PASSWORD}"
          datacenters = "${VSPHERE_DATACENTER}"

          [Network]
          public-network = "${VSPHERE_NETWORK}"
  targets:
  - clusterSelector:
      matchLabels:
        csi: vsphere
        cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
---
kind: Bundle
apiVersion: fleet.cattle.io/v1alpha1
metadata:
  name: vsphere-cloud-credentials
  namespace: '${NAMESPACE}'
spec:
  resources:
  - content: |-
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: vsphere-cloud-secret
        namespace: kube-system
      stringData:
        ${VSPHERE_SERVER}.password: "${VSPHERE_PASSWORD}"
        ${VSPHERE_SERVER}.username: "${VSPHERE_USERNAME}"
  targets:
  - clusterSelector:
      matchLabels:
        cloud-provider: vsphere
        cluster.x-k8s.io/cluster-name: '${CLUSTER_NAME}'
---
