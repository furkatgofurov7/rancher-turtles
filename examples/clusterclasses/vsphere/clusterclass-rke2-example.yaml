apiVersion: cluster.x-k8s.io/v1beta1
kind: ClusterClass
metadata:
  name: vsphere-rke2-example
spec:
  controlPlane:
    ref:
      apiVersion: controlplane.cluster.x-k8s.io/v1beta1
      kind: RKE2ControlPlaneTemplate
      name: vsphere-rke2-example-controlplane
    machineInfrastructure:
      ref:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        name: vsphere-rke2-example-controlplane
  infrastructure:
    ref:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VSphereClusterTemplate
      name: vsphere-rke2-example
  workers:
    machineDeployments:
    - class: vsphere-rke2-example-worker
      template:
        bootstrap:
          ref:
            apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
            kind: RKE2ConfigTemplate
            name: vsphere-rke2-example-worker
        infrastructure:
          ref:
            apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
            kind: VSphereMachineTemplate
            name: vsphere-rke2-example-worker
  variables:
  - name: sshKey
    required: false
    schema:
      openAPIV3Schema:
        description: Public key to SSH onto the cluster nodes.
        type: string
  - name: controlPlaneIpAddr
    required: true
    schema:
      openAPIV3Schema:
        description: Floating VIP for the control plane.
        type: string
  - name: controlPlanePort
    required: true
    schema:
      openAPIV3Schema:
        description: Port for the control plane endpoint.
        type: integer
  - name: kubeVipPodManifest
    required: true
    schema:
      openAPIV3Schema:
        description: kube-vip manifest for the control plane.
        type: string
  - name: vSphereTLSThumbprint
    required: true
    schema:
      openAPIV3Schema:
        description: "sha256 thumbprint of the vcenter certificate: openssl x509 -sha256 -fingerprint -in ca.crt -noout"
        type: string
  - name: vSphereClusterIdentityName
    required: true
    schema:
      openAPIV3Schema:
        description: The VSphereClusterIdentity resource name referencing the credentials to create the Cluster.
        type: string
        default: cluster-identity
  - name: vSphereServer
    required: true
    schema:
      openAPIV3Schema:
        description: The vCenter server IP or FQDN.
        type: string
  - name: vSphereDataCenter
    required: true
    schema:
      openAPIV3Schema:
        description: The vSphere datacenter to deploy the Cluster on.
        type: string
  - name: vSphereResourcePool
    required: true
    schema:
      openAPIV3Schema:
        description: The vSphere resource pool for your VMs.
        type: string
  - name: vSphereDataStore
    required: true
    schema:
      openAPIV3Schema:
        description: The vSphere datastore to deploy the Cluster on.
        type: string
  - name: vSphereNetwork
    required: true
    schema:
      openAPIV3Schema:
        description: The VM network to deploy the Cluster on.
        type: string
  - name: vSphereFolder
    required: true
    schema:
      openAPIV3Schema:
        description: The VM folder for your VMs. Set to "" to use the root vSphere folder.
        type: string
  - name: vSphereTemplate
    required: true
    schema:
      openAPIV3Schema:
        description: The VM template to use for your Cluster.
        type: string
  patches:
  - name: infraCluster
    definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/controlPlaneEndpoint
        valueFrom:
          template: |
            host: '{{ .controlPlaneIpAddr }}'
            port: {{ .controlPlanePort }}
      - op: add
        path: /spec/template/spec/identityRef/name
        valueFrom:
          variable: vSphereClusterIdentityName
      - op: add
        path: /spec/template/spec/server
        valueFrom:
          variable: vSphereServer
      - op: add
        path: /spec/template/spec/thumbprint
        valueFrom:
          variable: vSphereTLSThumbprint
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereClusterTemplate
        matchResources:
          infrastructureCluster: true
  - name: vsphereMachineTemplate
    definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec
        valueFrom:
          template: |
            datacenter: '{{ .vSphereDataCenter }}'
            datastore: '{{ .vSphereDataStore }}'
            folder: '{{ .vSphereFolder }}'
            network:
              devices:
              - dhcp4: true
                networkName: '{{ .vSphereNetwork }}'
            resourcePool: '{{ .vSphereResourcePool }}'
            server: '{{ .vSphereServer }}'
            template: '{{ .vSphereTemplate }}'
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          controlPlane: true
    - jsonPatches:  
      - op: add
        path: /spec/template/spec
        valueFrom:
          template: |
            datacenter: '{{ .vSphereDataCenter }}'
            datastore: '{{ .vSphereDataStore }}'
            folder: '{{ .vSphereFolder }}'
            network:
              devices:
              - dhcp4: true
                networkName: '{{ .vSphereNetwork }}'
            resourcePool: '{{ .vSphereResourcePool }}'
            server: '{{ .vSphereServer }}'
            template: '{{ .vSphereTemplate }}'
      selector:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VSphereMachineTemplate
        matchResources:
          machineDeploymentClass:
            names: 
            - vsphere-rke2-example-worker
  - name: rke2ControlPlaneTemplate
    definitions:
    - jsonPatches:
      # - op: add
      #   path: /spec/template/spec/files
      #   value: 
      #   - path: "/var/lib/rancher/rke2/server/manifests/coredns-config.yaml"
      #     owner: "root:root"
      #     permissions: "0640"
      #     content: |
      #         apiVersion: helm.cattle.io/v1
      #         kind: HelmChartConfig
      #         metadata:
      #           name: rke2-coredns
      #           namespace: kube-system
      #         spec:
      #           valuesContent: |
      #             tolerations:
      #               - key: "node.cloudprovider.kubernetes.io/uninitialized"
      #                 value: "true"
      #                 effect: "NoSchedule"
      - op: add
        path: /spec/template/spec/files
        valueFrom:
          template: |-
            - path: "/var/lib/rancher/rke2/server/manifests/kubevip.yaml"
              owner: "root:root"
              permissions: "0640"
              content: {{ printf  "%q" .kubeVipPodManifest }}
      - op: add
        path: /spec/template/spec/agentConfig/additionalUserData
        valueFrom:
          template: |-
            config: |-
              users:
                - name: capv
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh-authorized-keys:
                  - {{ .sshKey }}   
      selector:
        apiVersion: controlplane.cluster.x-k8s.io/v1beta1
        kind: RKE2ControlPlaneTemplate
        matchResources:
          controlPlane: true
  - name: rke2ConfigTemplate
    definitions:
    - jsonPatches:
      - op: add
        path: /spec/template/spec/agentConfig/additionalUserData
        valueFrom:
          template: |-
            config: |-
              users:
                - name: capv
                  sudo: ALL=(ALL) NOPASSWD:ALL
                  ssh-authorized-keys:
                  - {{ .sshKey }}   
      selector:
        apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
        kind: RKE2ConfigTemplate
        matchResources:
          machineDeploymentClass:
            names:
            - vsphere-rke2-example-worker
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereClusterTemplate
metadata:
  name: vsphere-rke2-example
spec:
  template:
    spec:
      identityRef:
        kind: VSphereClusterIdentity
        name: cluster-identity
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: RKE2ControlPlaneTemplate
metadata:
  name: vsphere-rke2-example-controlplane
spec:
  template:
    spec:
      agentConfig: {}
      serverConfig:
        cni: none
        cloudProviderName: external
        disableComponents:
          kubernetesComponents:
          - cloudController
      rolloutStrategy:
        type: "RollingUpdate"
        rollingUpdate:
          maxSurge: 1
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: RKE2ConfigTemplate
metadata:
  name: vsphere-rke2-example-worker
spec: 
  template:
    spec:
      agentConfig:
        kubelet:
          extraArgs:
            - "--cloud-provider=external"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  name: vsphere-rke2-example-controlplane
spec:
  template:
    spec:
      cloneMode: linkedClone
      datacenter: 'set-by-patch'
      datastore: 'set-by-patch'
      diskGiB: 25
      folder: 'set-by-patch'
      memoryMiB: 8192
      numCPUs: 2
      os: Linux
      powerOffMode: trySoft
      resourcePool: 'set-by-patch'
      server: 'set-by-patch'
      template: 'set-by-patch'
      thumbprint: 'set-by-patch'
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VSphereMachineTemplate
metadata:
  name: vsphere-rke2-example-worker
spec:
  template:
    spec:
      cloneMode: linkedClone
      datacenter: 'set-by-patch'
      datastore: 'set-by-patch'
      diskGiB: 25
      folder: 'set-by-patch'
      memoryMiB: 8192
      numCPUs: 2
      os: Linux
      powerOffMode: trySoft
      resourcePool: 'set-by-patch'
      server: 'set-by-patch'
      template: 'set-by-patch'
      thumbprint: 'set-by-patch'
